From fea05825c9d5d6c717c69c1e26b95f643a5a31cd Mon Sep 17 00:00:00 2001
From: Dan O'Donovan <dan@emutex.com>
Date: Thu, 22 Nov 2018 18:13:19 +0000
Subject: [PATCH 16/19] pinctrl-upboard: add regmap patches for CREX and CRST02
 UP Core carrier boards

The initial pinctrl configuration on the CPLD on CREX and CRST02 boards isn't
set up on the BIOS for the pin functions such as SPI, PWM, UART, etc.  So
those functions aren't currently working after boot.

This commit adds a regmap patch, similar to those used on UP/UP^2, to initialise
the pins for the corresponding functions by default.  The GPIO driver will
update the configuration if they are later exported as GPIO pins.

Signed-off-by: Dan O'Donovan <dan@emutex.com>
---
 drivers/pinctrl/pinctrl-upboard.c | 54 ++++++++++++++++++++++++++++++++++++---
 1 file changed, 50 insertions(+), 4 deletions(-)

diff --git a/drivers/pinctrl/pinctrl-upboard.c b/drivers/pinctrl/pinctrl-upboard.c
index ed1d9bd..5dae769 100644
--- a/drivers/pinctrl/pinctrl-upboard.c
+++ b/drivers/pinctrl/pinctrl-upboard.c
@@ -536,11 +536,53 @@ static unsigned int upboard_upcore_crex_rpi_mapping[] = {
 };
 
 /*
+ * Init patches applied to the registers until the BIOS sets proper defaults
+ */
+static const struct reg_sequence upboard_upcore_crex_reg_patches[] __initconst = {
+	// enable I2C voltage-level shifters
+	{ UPFPGA_REG_FUNC_EN0,
+		BIT(UPFPGA_I2C0_EN) |
+		BIT(UPFPGA_I2C1_EN)
+	},
+	// HAT function pins initially set as inputs
+	{ UPFPGA_REG_GPIO_DIR0,
+		BIT(UPFPGA_UPCORE_CREX_SPI2_MISO) |
+		BIT(UPFPGA_UPCORE_CREX_UART1_RXD) |
+		BIT(UPFPGA_UPCORE_CREX_I2S2_FRM) |
+		BIT(UPFPGA_UPCORE_CREX_I2S2_CLK) |
+		BIT(UPFPGA_UPCORE_CREX_I2S2_RX)
+	},
+	// HAT function pins initially enabled (i.e. not hi-Z)
+	{ UPFPGA_REG_GPIO_EN0,
+		BIT(UPFPGA_UPCORE_CREX_SPI2_CS0) |
+		BIT(UPFPGA_UPCORE_CREX_SPI2_MOSI) |
+		BIT(UPFPGA_UPCORE_CREX_SPI2_MISO) |
+		BIT(UPFPGA_UPCORE_CREX_SPI2_CLK) |
+		BIT(UPFPGA_UPCORE_CREX_UART1_TXD) |
+		BIT(UPFPGA_UPCORE_CREX_UART1_RXD) |
+		BIT(UPFPGA_UPCORE_CREX_PWM0) |
+		BIT(UPFPGA_UPCORE_CREX_PWM1) |
+		BIT(UPFPGA_UPCORE_CREX_I2S2_FRM) |
+		BIT(UPFPGA_UPCORE_CREX_I2S2_CLK) |
+		BIT(UPFPGA_UPCORE_CREX_I2S2_RX)
+	},
+	{ UPFPGA_REG_GPIO_EN1,
+		BIT(UPFPGA_UPCORE_CREX_I2S2_TX)
+	},
+};
+
+static const struct upboard_bios upboard_upcore_crex_bios_info __initconst = {
+	.patches = upboard_upcore_crex_reg_patches,
+	.npatches = ARRAY_SIZE(upboard_upcore_crex_reg_patches),
+};
+
+/*
  * UP Core board + CRST02 carrier board data
  */
 
 #define upboard_upcore_crst02_pins        upboard_upcore_crex_pins
 #define upboard_upcore_crst02_rpi_mapping upboard_upcore_crex_rpi_mapping
+#define upboard_upcore_crst02_bios_info   upboard_upcore_crex_bios_info
 
 static int upboard_set_mux(struct pinctrl_dev *pctldev, unsigned int function,
 			   unsigned int group)
@@ -809,9 +851,11 @@ static int __init upboard_pinctrl_probe(struct platform_device *pdev)
 	} else if (!strcmp(hid, "AANT0F02")) {
 		pctldesc = &upboard_upcore_crex_pinctrl_desc;
 		rpi_mapping = upboard_upcore_crex_rpi_mapping;
+		bios_info = &upboard_upcore_crex_bios_info;
 	} else if (!strcmp(hid, "AANT0F03")) {
 		pctldesc = &upboard_upcore_crst02_pinctrl_desc;
 		rpi_mapping = upboard_upcore_crst02_rpi_mapping;
+		bios_info = &upboard_upcore_crst02_bios_info;
 	} else
 		return -ENODEV;
 
@@ -901,10 +945,12 @@ static int __init upboard_pinctrl_probe(struct platform_device *pdev)
 	if (ret)
 		return ret;
 
-	/* check for special board versions that require register patches */
-	system_id = dmi_first_match(upboard_dmi_table);
-	if (system_id)
-		bios_info = system_id->driver_data;
+	if (! bios_info) {
+		/* check for special board versions that require register patches */
+		system_id = dmi_first_match(upboard_dmi_table);
+		if (system_id)
+			bios_info = system_id->driver_data;
+	}
 
 	if (bios_info && bios_info->patches) {
 		ret = regmap_register_patch(pctrl->regmap,
-- 
2.7.4

